{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","i","GifExpertApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"yMA8BeA,EA3BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,iDAEmCC,UAAUH,GAF7C,6BACJ,oCADI,SAGII,MAAOF,GAHX,cAGbG,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCqBLO,EAlBM,SAACf,GAClB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNpB,EAAQC,GAAUoB,MAAK,SAAAC,GACnBH,EAAU,CACNX,KAAK,YAAKc,GACVL,SAAS,SAGnB,CAAChB,IAEIiB,GCPIK,MATf,YAAyC,IAAlBX,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,MAAOV,EAAM,EAANA,IAC9B,OACI,sBAAKqB,UAAU,0CAAf,UACI,4BAAIX,IACJ,qBAAKD,GAAIA,EAAIa,IAAKtB,EAAKuB,IAAKb,QCazBc,EAfC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAEd,EAA+Be,EAAaf,GAAhCa,EAAZ,EAAON,KAAaS,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAKhB,IACJgB,GAAW,6CACVA,GAAW,qBAAKO,UAAU,WAAf,SACPV,EAAOJ,KAAI,SAAAkB,GAAC,OAAK,cAAC,EAAD,eAA4BA,GAAVA,EAAEhB,aCT1CiB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,eAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWpB,KAAI,SAACqB,EAAEH,GAAH,OAAS,cAAC,EAAD,CAAmB3B,SAAU8B,GAAfA,EAAEH,YCX5DI,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.8e97cc48.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async(category) => {     \r\n    const apiKey = 'tc8jBqW0wVqwbu9S7uw0ahpkAFSgHJm7';   \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\r\n    const response = await fetch (url);\r\n    const {data} = await response.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n            setState ({ \r\n                data: [...imgs],\r\n                loading: false\r\n            })\r\n        });\r\n    },[category]);\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\n\r\nfunction GifGridItem({ id, title, url}) {\r\n    return (\r\n        <div className=\"card animate__animated animate__flipInX\">\r\n            <p>{title}</p>\r\n            <img id={id} src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Cargando...</p>}\r\n            {!loading && <div className=\"cardGrid\">\r\n                { images.map(i => (<GifGridItem key={i.id} {...i} />)) }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Smash Bros']);\r\n    \r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((c,i) => <GifGrid key={c+i} category={c}/>)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));"],"sourceRoot":""}